name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Explications des modifications
    # Action actions/cache@v3 :
    # Cette action est utilisée pour mettre en cache les dépendances Node.js. Elle compare le hash du fichier package-lock.json pour invalider le cache si les dépendances changent.

    # Paramètres du cache :
    # path: ~/.npm : Cible le dossier des dépendances Node.js.
    # key : Génère une clé unique basée sur le système d'exploitation et le hash du fichier package-lock.json.
    # restore-keys : Fournit des clés de secours pour essayer de restaurer un cache partiel si la clé exacte n'est pas trouvée.
    # Bénéfices :
    # Réduit les temps d'installation si le cache est valide.
    # Recrée le cache uniquement si les dépendances changent.

    # sans cache ça pris 1m 43s 
    # avec cache ça pris 3m 12s
    # 2eme execution avec cache
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - run: npm i

  # avec la parallelisation des tests ça pris
  tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - run: npm i

    - name: Run General Tests
      run: npm test

  test_nestjs:
    runs-on: ubuntu-latest
    needs: build 

    steps:
    - uses: actions/checkout@v2

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - run: npm i

    - name: Run NestJS Tests
      run: npm run test:nestjs

  test_mocha:
    runs-on: ubuntu-latest
    needs: build 

    steps:
    - uses: actions/checkout@v2

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Set up Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - run: npm i

    - name: Run Mocha Tests
      run: npm run test:mocha
